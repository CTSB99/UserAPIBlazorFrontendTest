@page "/fetchuserdata"
@using UserAPIBlazorFrontendTest.Data
@using UserAPIBlazorFrontendTest.Models
@inject IUserService iUserService;


<PageTitle>User Data</PageTitle>

<h1>User Data</h1>

@if (userList == null){
    <h2>Loading ...</h2>
}else{

    <div class="UserDiv" id="AllUserDiv">
        <button @onclick=GetAllUsers>Update Data</button>

        @foreach (var User in userList)
        {
            <ul>
                <li>
                    User Id: @User.Id
                </li>
                <li>
                    First Name: @User.Firstname
                </li>
                <li>
                    Last Name: @User.Lastname
                </li>
                <li>
                    User Name @User.Username
                </li>
            </ul>
        }
    </div>

    <div class="UserDiv" id="SingleUserDiv">
        <label for="IdInput">Input UserId here: </label>
        <input name="IdInput" @bind="inputId" />
        <button name="ConfirmButton" @onclick=ReadUser>Confirm</button>

        @if(userToGet == null){

        }else{
            <ul>
                <li>
                    User Id: @userToGet.Id
                </li>
                <li>
                    First Name: @userToGet.Firstname
                </li>
                <li>
                    Last Name: @userToGet.Lastname
                </li>
                <li>
                    User Name @userToGet.Username
                </li>
            </ul>
        }
        
    </div>

    <div class="UserDiv" id="NewUserDiv">
        <form>
            <label for="firstnameInput">First Name: </label>
            <input name="firstnameInput" @bind="firstname">

            <label for="lastnameInput">Last Name: </label>
            <input name="lastnameInput" @bind="lastname">

            <label for="usernameInput">User Name: </label>
            <input name="usernameInput" @bind="username">

            <label for="passwordInput">Password : </label>
            <input name="passwordInput" @bind="password">
        </form>
        <button name="NewUserButton" @onclick=CreateUser>Add New User</button>
    </div>

    <div class="UserDiv" id="DeleteDiv">
        <label for="DeleteId">Input Id of the User you want to remove here</label>
        <input name="DeleteId" @bind="deleteId" />
        <button name="ConfirmButton" @onclick=DeleteUser>Remove User from Database</button>
    </div>
}


@code {
    private List<User> userList = new List<User>();
    private User userToGet = new User();
    private int inputId;
    private int deleteId;
    private string? firstname;
    private string? lastname;
    private string? username;
    private string? password;
    public User NewUser = new User();

    protected override async Task OnInitializedAsync()
    {
        userList = await iUserService.GetAllUsers();
        userToGet = null;
    }

    public async Task GetAllUsers(){
        userList = await iUserService.GetAllUsers();
    }

    public async Task ReadUser()
    {
        userToGet = await iUserService.ReadUser(inputId);
    }

    public async void CreateUser()
    {
        NewUser.Firstname = firstname;
        NewUser.Lastname = lastname;
        NewUser.Username = username;
        NewUser.Password = password;

        await iUserService.CreateUser(NewUser);
    }
    public void DeleteUser()
    {
        iUserService.DeleteUser(deleteId);
    }
}